// To deal with waypoint-based false positives in RMM, we either:
// 1. Change the logic (in edits.json or substitutions.json) to prevent the path
// 2. Give a hint to remind the player to go somewhere else first to unlock the path
[
  {
    "Start": "Town",
    "Destination": "Town[door_sly]",
    "PDBools": [
      "slyRescued" 
    ],
    "Text": "You need to rescue Sly first."
  },
  {
    "Start": "Town",
    "Destination": "Town[door_bretta]",
    "PDBools": [
      "brettaRescued" 
    ],
    "Text": "You need to rescue Bretta first."
  },
  {
    "Start": "Town",
    "Destination": "Town[room_grimm]",
    "PDBools": [
      "troupeInTown" 
    ],
    "Text": "You need to light the Nightmare Lantern first."
  },
  {
    "Start": "Town",
    "Destination": "Town[room_divine]",
    "PDBools": [
      "troupeInTown" 
    ],
    "Text": "You need to light the Nightmare Lantern first."
  },
  {
    "Start": "RestingGrounds_05",
    "Destination": "RestingGrounds_05[right1]",
    "PDBools": [
      "gladeDoorOpened" 
    ],
    "Text": "You need to talk to Seer first."
  },
  {
    "Start": "Waterways_07",
    "Destination": "Waterways_07[right1]",
    "PDBools": [
      "waterwaysAcidDrained" 
    ],
    "Text": "You need to drain the Waterways acid first."
  },
  {
    "Start": "Waterways_07[door1]",
    "Destination": "Waterways_07[right1]",
    "PDBools": [
      "waterwaysAcidDrained" 
    ],
    "Text": "You need to drain the Waterways acid first."
  },
  {
    "Start": "Waterways_07[top1]",
    "Destination": "Waterways_07[right1]",
    "PDBools": [
      "waterwaysAcidDrained" 
    ],
    "Text": "You need to drain the Waterways acid first."
  }
]